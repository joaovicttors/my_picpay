plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        vectorDrawables.useSupportLibrary = true
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation project(":core")

    // APP COMPAT
    implementation("androidx.appcompat:appcompat:$appcompat_version")

    // CONSTRAINT
    implementation("androidx.constraintlayout:constraintlayout:$constraintlayout_version")

    // CORE
    implementation("androidx.core:core-ktx:$core_ktx_version")

    // KOTLIN
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")

    // LIFECYCLE
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

    // MATERIAL
    implementation("com.google.android.material:material:$material_version")

    // COROUTINES
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version")

    // GSON
    implementation("com.google.code.gson:gson:$gson_version")

    // KOIN
    implementation("io.insert-koin:koin-core:$koin_version")
    implementation("io.insert-koin:koin-android:$koin_version")

    // RETROFIT
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")

    // ROOM
    implementation("androidx.room:room-ktx:$room_version")
    implementation("androidx.room:room-runtime:$room_version")

    // JUNIT
    testImplementation("junit:junit:$junit_version")

    // MOCKK
    testImplementation("io.mockk:mockk:$mockk_version")

    // MOCKITO
    // testImplementation("org.mockito:mockito-inline:$mockito_version")
    // testImplementation("org.mockito.kotlin:mockito-kotlin:$mockito_version")
}